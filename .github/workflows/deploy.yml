name: CI/CD Deployment

on:
  push:
    branches:
      - main  # Passe an deinen Stamm-Branch an (z. B. master)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: SSH-Agent starten
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Build & Deployment auf Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e

            # Verzeichnis erstellen oder hineingehen
            cd ~/webapp || git clone  git@github.com:Webengineering-GELI-TRSI/webapplication-geli-trsi-weni.git ~/webapp && cd ~/webapp
            apt install git -y
            # Aktuellen Branch ziehen
            git checkout main
            git pull origin main
    
            # Dockerfile schreiben (falls noch nicht vorhanden)
            cat > Dockerfile << 'DOCKER'
            FROM nginx:alpine
            COPY public/ /usr/share/nginx/html/
            EXPOSE 80
            CMD ["nginx", "-g", "daemon off;"]
            DOCKER

            # Image bauen, Container ersetzen
            #docker build -t webapp:latest .
            #docker stop webapp-container || true
            #docker rm webapp-container || true
            #docker run -d -p 80:80 --name webapp-container webapp:latest
          EOF
